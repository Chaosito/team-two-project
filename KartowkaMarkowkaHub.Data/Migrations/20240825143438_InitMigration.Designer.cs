// <auto-generated />
using System;
using KartowkaMarkowkaHub.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace KartowkaMarkowkaHub.Data.Migrations
{
    [DbContext(typeof(HubContext))]
    [Migration("20240825143438_InitMigration")]
    partial class InitMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("KartowkaMarkowkaHub.Core.BaseEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable((string)null);

                    b.UseTpcMappingStrategy();
                });

            modelBuilder.Entity("KartowkaMarkowkaHub.Core.Domain.UserRole", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uuid");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRole");
                });

            modelBuilder.Entity("KartowkaMarkowkaHub.Core.Domain.Order", b =>
                {
                    b.HasBaseType("KartowkaMarkowkaHub.Core.BaseEntity");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<long>("Number")
                        .HasColumnType("bigint");

                    b.Property<Guid>("OrderStatusId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid");

                    b.HasIndex("ClientId");

                    b.HasIndex("OrderStatusId");

                    b.HasIndex("ProductId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("KartowkaMarkowkaHub.Core.Domain.OrderStatus", b =>
                {
                    b.HasBaseType("KartowkaMarkowkaHub.Core.BaseEntity");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("StatusType")
                        .HasColumnType("integer");

                    b.ToTable("OrderStatus");
                });

            modelBuilder.Entity("KartowkaMarkowkaHub.Core.Domain.Product", b =>
                {
                    b.HasBaseType("KartowkaMarkowkaHub.Core.BaseEntity");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasIndex("UserId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("KartowkaMarkowkaHub.Core.Domain.Role", b =>
                {
                    b.HasBaseType("KartowkaMarkowkaHub.Core.BaseEntity");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("KartowkaMarkowkaHub.Core.Domain.User", b =>
                {
                    b.HasBaseType("KartowkaMarkowkaHub.Core.BaseEntity");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.ToTable("User");
                });

            modelBuilder.Entity("KartowkaMarkowkaHub.Core.Domain.Client", b =>
                {
                    b.HasBaseType("KartowkaMarkowkaHub.Core.Domain.User");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasIndex("UserId");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("KartowkaMarkowkaHub.Core.Domain.Farmer", b =>
                {
                    b.HasBaseType("KartowkaMarkowkaHub.Core.Domain.User");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uuid");

                    b.HasIndex("UserId");

                    b.ToTable("Farmer");
                });

            modelBuilder.Entity("KartowkaMarkowkaHub.Core.Domain.UserRole", b =>
                {
                    b.HasOne("KartowkaMarkowkaHub.Core.Domain.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KartowkaMarkowkaHub.Core.Domain.User", "User")
                        .WithMany("Roles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("KartowkaMarkowkaHub.Core.Domain.Order", b =>
                {
                    b.HasOne("KartowkaMarkowkaHub.Core.Domain.User", "Client")
                        .WithMany("Orders")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KartowkaMarkowkaHub.Core.Domain.OrderStatus", "OrderStatus")
                        .WithMany("Orders")
                        .HasForeignKey("OrderStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KartowkaMarkowkaHub.Core.Domain.Product", "Product")
                        .WithMany("Orders")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("OrderStatus");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("KartowkaMarkowkaHub.Core.Domain.Product", b =>
                {
                    b.HasOne("KartowkaMarkowkaHub.Core.Domain.User", "User")
                        .WithMany("Products")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("KartowkaMarkowkaHub.Core.Domain.Client", b =>
                {
                    b.HasOne("KartowkaMarkowkaHub.Core.Domain.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("KartowkaMarkowkaHub.Core.Domain.Farmer", b =>
                {
                    b.HasOne("KartowkaMarkowkaHub.Core.Domain.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("KartowkaMarkowkaHub.Core.Domain.OrderStatus", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("KartowkaMarkowkaHub.Core.Domain.Product", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("KartowkaMarkowkaHub.Core.Domain.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("KartowkaMarkowkaHub.Core.Domain.User", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("Products");

                    b.Navigation("Roles");
                });
#pragma warning restore 612, 618
        }
    }
}
